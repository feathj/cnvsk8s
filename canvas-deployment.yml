apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: canvas
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: canvas
        app: canvas
    spec:
      containers:
      - name: canvas
        image: instructure/canvas-lms:master
        imagePullPolicy: Always
        env:
        - name: CANVAS_LMS_ACCOUNT_NAME
          value: canvas-k8s
        - name: CANVAS_LMS_ADMIN_EMAIL
          value: admin1@example.com
        - name: CANVAS_LMS_ADMIN_PASSWORD
          value: password
        - name: CANVAS_LMS_STATS_COLLECTION
          value: opt_out
        - name: RAILS_DB_HOST
          value: canvas-postgres

        ports:
        - name: http
          containerPort: 80
        volumeMounts:
          - name: config-volume
            mountPath: /usr/src/app/config/database.yml
            subPath: database.yml
          - name: config-volume
            mountPath: /usr/src/app/config/security.yml
            subPath: security.yml
          - name: config-volume
            mountPath: /usr/src/app/config/domain.yml
            subPath: domain.yml
        #livenessProbe:
          #httpGet:
            #path: /health_check
            #port: 7000
          #initialDelaySeconds: 180
          #timeoutSeconds: 15
        #readinessProbe:
          #httpGet:
            #path: /health_check
            #port: 7000
          #initialDelaySeconds: 15
          #timeoutSeconds: 1
      volumes:
        - name: config-volume
          configMap:
            name: canvas-configmap
        - name: data
